enable = false
function onLoad()
  setInitiativeMeterPanels()
  setInitiativeNameMeterPanels()
  setInitiativeDice()
  setInitiativeInitiativeMeterPanels()
  setInitiativeTypeMeterPanels()
  initializeInitiativeTracker(initiativeMeterDice)
end


function initializeInitiativeTracker()
  setInitiativeTableLayout()
  for i = 1, 8 do
    initiativeTableLayout[i] = {
      tag="Row",
      attributes={
        id="initiative-" .. i,
        childForceExpandWidth=false,
        dontUseTableRowBackground="true",
      },
      children={
        {
          tag="Cell",
          attributes={
            dontUseTableCellBackground=true,
            color="blue"
          },
          children={
            {
              tag="Text",
              attributes={
                fontSize=15,
                color="white",
                text="X"
              },
            },
          }
        },
        {
          tag="Cell",
          attributes={
            id="initiative-" .. i .. "-type",
            dontUseTableCellBackground=true,
          },
          children={
            {
              tag="VerticalLayout",
              children={
                {
                  tag="Text",
                  attributes={
                    id="initiative-" .. i .. "-name",
                    fontSize=13,
                    color="white",
                  },
                },
                {
                  tag="Text",
                  attributes={
                    id="initiative-" .. i .. "-initiative",
                    fontSize=13,
                    width="100",
                    color="white",
                  },
                }
              }
            }
          }
        }
      }
    }
  end

  UI.setXmlTable({
    {
      tag="TableLayout",
      attributes={
        id="InitiativeTracker",
        active=false,
        offsetXY="-25 -50",
        childForceExpandWidth=false,
        width=200,
        rectAlignment="UpperRight",
        columnWidths="50 150",
      },
      children={
        initiativeTableLayout[1],
        initiativeTableLayout[2],
        initiativeTableLayout[3],
        initiativeTableLayout[4],
        initiativeTableLayout[5],
        initiativeTableLayout[6],
        initiativeTableLayout[7],
        initiativeTableLayout[8],
      }
    }
  })
end

function setInitiativeTableLayout()
  initiativeTableLayout = {{},{},{},{},{},{},{},{},}
end

function setInitiativeMeterPanels()
  initiativeMeterPanels = {
    "initiative-1","initiative-2","initiative-3","initiative-4","initiative-5","initiative-6","initiative-7","initiative-8",
  }
end

function setInitiativeNameMeterPanels()
  initiativeNameMeterPanels = {
    "initiative-1-name","initiative-2-name","initiative-3-name","initiative-4-name","initiative-5-name","initiative-6-name","initiative-7-name","initiative-8-name",
  }
end

function setInitiativeInitiativeMeterPanels()
  initiativeInitiativeMeterPanels = {
    "initiative-1-initiative","initiative-2-initiative","initiative-3-initiative","initiative-4-initiative","initiative-5-initiative","initiative-6-initiative","initiative-7-initiative","initiative-8-initiative",
  }
end

function setInitiativeTypeMeterPanels()
  initiativeTypeMeterPanels = {
    "initiative-1-type","initiative-2-type","initiative-3-type","initiative-4-type","initiative-5-type","initiative-6-type","initiative-7-type","initiative-8-type",
  }
end

setInitiativeTracker = 0
function updateInitiativeMeter(initiativeMeterDice)
  setInitiativeTracker = setInitiativeTracker + 1
  if setInitiativeTracker == 1 then
    UI.setAttribute("InitiativeTracker", "active", true)
  end
  height = 0
  for i, initiativeMeterDie in ipairs(initiativeMeterDice) do
    height = height + 50
    UI.setAttribute("InitiativeTracker", "height", height)

    UI.setAttribute(initiativeMeterPanels[i], "active", true)
    UI.setAttribute(initiativeNameMeterPanels[i], "text", JSON.decode(initiativeMeterDie.getGMNotes()).name)
    UI.setAttribute(initiativeInitiativeMeterPanels[i], "text", 'Initiative: ' .. JSON.decode(initiativeMeterDie.getGMNotes()).value)

    UI.setAttribute(initiativeNameMeterPanels[i], "fontSize", 12)
    UI.setAttribute(initiativeInitiativeMeterPanels[i], "fontSize", 12)

    if JSON.decode(initiativeMeterDie.getGMNotes()).type == 'baddie' then
      UI.setAttribute(initiativeMeterPanels[i], "color", "purple")
    elseif JSON.decode(initiativeMeterDie.getGMNotes()).type == 'gearlock' then
      UI.setAttribute(initiativeMeterPanels[i], "color", "green")
    end
  end
  for i = 8, #initiativeMeterDice + 1, -1 do
    UI.setAttribute(initiativeMeterPanels[i], "active", false)
  end
end

function onObjectLeaveScriptingZone(zone, obj)
  setIninitiativeMeter = getObjectFromGUID('8d4497')
  if zone.getGUID() == '8337ae' then
    for i, InitiativeDie in ipairs(InitiativeDice) do
      if obj.getGUID() == InitiativeDie then
        setIninitiativeMeter.call('removeDieFromInitiativeMeter')
      end
    end
  end
end

function onObjectEnterScriptingZone(zone, obj)
  setIninitiativeMeter = getObjectFromGUID('8d4497')
  if zone.getGUID() == '47ef9a' and enable == true then
    for i, InitiativeDie in ipairs(InitiativeDice) do
      if obj.getGUID() == InitiativeDie then
        setIninitiativeMeter.call('addDieFromInitiativeMeter')
      end
    end
  end
end

self.setPosition({10, -1, 0.7})
function setInitiativeDice()
  InitiativeDice = {
    '7c1582',
    '4d2834',
    '3aaaf7',
    '28d12b',
    '96b1fa',
    'f4f615',
    'ef8dcc',
    '85c726',
    'eef847',
    '545238',
    '73e679'
  }
end
